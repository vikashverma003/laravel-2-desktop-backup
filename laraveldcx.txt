homestead
php artisan serve
https://appdividend.com/2017/10/15/laravel-5-5-crud-example-tutorial/

action and route path must be same...

How Facades Work
In a Laravel application, a facade is a class that provides access to an object from the container. The machinery that makes this work is in the Facade class. Laravel's facades, and any custom facades you create, will extend the base Illuminate\Support\Facades\Facade class.

Facades provide a "static" interface to classes that are available in the application's service container. Laravel ships with many facades which provide access to almost all of Laravel's features. Laravel facades serve as "static proxies" to underlying classes in the service container, providing the benefit of a terse, expressive syntax while maintaining more testability and flexibility than traditional static methods.

All of Laravel's facades are defined in the Illuminate\Support\Facades namespace. So, we can easily access a facade like so:

use App\Http\Requests;
use Illuminate\Http\Request;


use Illuminate\Http\Request;

Retrieving An Input Value. Using a few simple methods, you may access all user input from your Illuminate\Http\Request instance.

namespace App\Http\Requests; 
is actually a namespace directory

notice the "s" at the end


use Illuminate\Http\Request;
is used for your requests


r

php artisan serve

/////////

request handling logic

for making the controller 

yes now in laravel 5.2 make:controller command creates plan controller, if you want to make resource controller you need to add --resource

php artisan make:controller ControllerName //create plain controller

php artisan make:controller ControllerName --resource

for makiing the plain controller we will use
///////


for making model we will do

php artisan make: model ModelName 



///////////////



Retrieving Input

The input values can be easily retrieved in Laravel. No matter what method was used get or post, the Laravel method will retrieve input values for both the methods the same way. There are two ways we can retrieve the input values.

Using the input() method

Using the properties of Request instance

Using the input() method
The input() method takes one argument, the name of the field in form. For example, if the form contains username field then we can access it by the following way.

$name = $request->input('username');

Using the properties of Request instance

Like the input() method, we can get the username property directly from the request instance.

$request->username

//////////////

What is routing in laravel?
these are basically urls . 
All Laravel routes are defined in your route files, which are located in the routes directory. ... The routes/web.php file defines routes that are for your web interface. These routes are assigned the web middleware group, which provides features like session state and CSRF protection.

////////////////

What is artisan in laravel?
Artisan is the name of the command-line interface included with Laravel. 
It provides a number of helpful commands for your use while developing your application. 
It is driven by the powerful Symfony Console component.


////////////

What is CSRF token laravel?
Laravel makes it easy to protect your application from cross-site request forgery (CSRF) attacks. ... 
Laravel automatically generates a CSRF "token" for each active user session managed by the application. 
This token is used to verify that the authenticated user is the one actually making the requests to the application.
////////////

Why CSRF token is used?
A csrf token is generated for the forms and Must be tied to the user's sessions. 
It is used to send requests to the server, in which the token validates them. 
This is one way of protecting against csrf, another would be checking the referrer header


//////////
What's a CSRF token?
Cross-Site Request Forgery (CSRF) is a type of attack that occurs when a malicious web site, email, blog, instant message, or program causes a user's web browser to perform an unwanted action on a trusted site for which the user is currently authenticated.


//////////////

What is resource controller in laravel?
A Laravel resource controller makes it easier to build RESTful controllers around resources. For instance, you may wish to create a controller that manages blog posts stored by your application. Normally, you use a laravel resource controller to group common routes in one class.

/////////////////

Blade is a simple, yet powerful templating engine provided with Laravel. Unlike controller layouts, Blade is driven by template inheritance and sections. All Blade templates should use the .blade.php extension.

////////////

Laravel provides a simple and powerful templating engine like as blade. You can also use PHP code in blade template views. In fact, all blade views are compiled into plain PHP code. Blade view files use the “ .blade.php “ extension and it stored in “ resources/views “ directory.

////////////////////

The Eloquent ORM included with Laravel provides a beautiful, simple ActiveRecord implementation for working with your database. Each database table has a corresponding "Model" which is used to interact with that table. Models allow you to query for data in your tables, as well as insert new records into the table.

///////////////////////


for deletion and get records from database we use get instead of post .

for updation and store data in db we use post



//////////////////////


The Eloquent ORM. An ORM is an object-relational mapper, and Laravel has one that you will absolutely love! It is named "Eloquent," because it allows you to work with your database objects and relationships using an eloquent and expressive syntax. The Eloquent ORM is Laravel's built-in ORM implementation.Jun 27, 2012


//////////

for insertion

    protected $fillable = ['first_name', 'last_name', 'email'];



The Eloquent ORM included with Laravel provides a beautiful, simple ActiveRecord implementation for working with your database. Each database table has a corresponding "Model" which is used to interact with that table.


Query builder

The database query builder provides a convenient, fluent interface to creating and running database queries. It can be used to perform most database operations in your 
application, and works on all supported database systems.

/////////////
 


////////////////////

Blade, a templating engine to design a unique layout. 
The layout thus designed can be used by other views, and includes a consistent design and structure.

/*  It does not restrict the developer from using plain PHP code in views. */


/*

/////

Please note that the use keyword allows the developers to shorten the namespace. 
The default namespace used in Laravel is app, however a user can change the namespace to match with a web application.


Declaration of namespace

Namespaces can be defined as a class of elements in which each element has a unique name to that 
associated class. It may be shared with elements in other classes.



Use Keyword
Namespaces take place in the position of current class. As mentioned in our example we have declared Tutorialspoint as our namespace and it is located in the app folder. The namespace declared will be App\Tutorialpoint. Whenever you want to use that class, you should use the use keyword.

/////

Laravel includes a middleware that verifies whether the user of the application is authenticated or not. 

If the user is authenticated, it redirects to the home page otherwise, if not, it redirects to the login page.
















<?php

    use App\User;

    class UserController extends Controller

        // [...]

        public function store(Request $request)
        {
            User::create($request->all());

            return back();
        }

        public function delete(User $user)
        {
            $user->delete();

            return back();
        }

        // [...]

    }


















*/






